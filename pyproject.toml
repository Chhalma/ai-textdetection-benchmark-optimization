
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-textdetection-benchmark-optimization"
version = "0.1.0"
description = "Systematic benchmarking and optimization of AI-generated text detection models"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "ai-detection",
    "nlp",
    "optimization",
    "benchmarking", 
    "quantization",
    "pruning",
    "transformers"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.35.0",
    "datasets>=2.15.0",
    "tokenizers>=0.15.0",
    "accelerate>=0.25.0",
    "optimum[onnxruntime]>=1.15.0",
    "onnx>=1.15.0",
    "onnxruntime>=1.16.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "apache-arrow>=14.0.0",
    "locust>=2.17.0",
    "psutil>=5.9.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.17.0",
    "pyyaml>=6.0.1",
    "omegaconf>=2.3.0",
    "tqdm>=4.66.0",
    "memory-profiler>=0.61.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.1.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]

api = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]

gpu = [
    "onnxruntime-gpu>=1.16.0",
]

all = [
    "ai-textdetection-benchmark-optimization[dev,api,gpu]",
]

[project.urls]
Homepage = "https://github.com/Chhalma/ai-textdetection-benchmark-optimization"
Repository = "https://github.com/Chhalma/ai-textdetection-benchmark-optimization"
Documentation = "https://github.com/Chhalma/ai-textdetection-benchmark-optimization#readme"
Issues = "https://github.com/Chhalma/ai-textdetection-benchmark-optimization/issues"

[project.scripts]
run-baseline = "scripts.run_baseline:main"
run-comparative-study = "scripts.run_comparative_study:main"
generate-report = "scripts.generate_report:main"

[tool.setuptools.packages.find]
include = ["benchmarks*", "scripts*"]
exclude = ["tests*", "notebooks*"]

[tool.setuptools.package-data]
benchmarks = ["configs/*.yaml", "configs/**/*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=benchmarks",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
